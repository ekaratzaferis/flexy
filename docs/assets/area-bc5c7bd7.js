import{S as se,P as ce,W as le,A as de,D as ue,a as pe,O as fe,M as ne,c as C,B as j,V as d,v as N,m as me,b as ye,p as he,u as we,R as Y,h as ve,Q as ge,e as R,T as U,C as xe,d as be}from"./OrbitControls-50fa714a.js";import{G as X,D as Z,f as K}from"./fit-curve-adba4c64.js";import{b as _}from"./flexy-f2d9260a.js";const t=new se,S=new ce(75,window.innerWidth/window.innerHeight,.1,1e3);S.position.set(10,5,10);const z=new le({antialias:!0,alpha:!0});z.setSize(window.innerWidth,window.innerHeight);document.body.appendChild(z.domElement);const Te=new de(4210752);t.add(Te);const te=new ue(16777215,.5);te.position.set(1,1,1);t.add(te);const ze=new pe(5);t.add(ze);const Ee=new fe(S,z.domElement);function V(){z.render(t,S)}Ee.addEventListener("change",function(){V()});window.addEventListener("resize",function(){const x=window.innerWidth,H=window.innerHeight;z.setSize(x,H),S.aspect=x/H,S.updateProjectionMatrix()});z.setClearColor(74565);z.setPixelRatio(window.devicePixelRatio);z.setSize(window.innerWidth,window.innerHeight);function $(x){const e=x.getPoints(1e3),J=new xe(e),E=new be(J,1e3,.05,8,!1),I=new ne({wireframe:!0});return new C(E,I)}V();let k,D,g,ee,b,T,L,A;const G=[];(async function(){const x=new ne({wireframe:!1}),H=function(n){return new Promise((o,r)=>{const s=new FileReader;s.onload=function(i){const m=new X,l=new Z;l.setDecoderPath("vendor/draco/gltf/"),m.setDRACOLoader(l),m.parse(s.result,"",u=>o(u.scene.children[2].geometry))},s.onerror=function(i){r(i)},s.readAsArrayBuffer(n)})},e={curve1:{calced:!1,start:{x:-5,y:0,z:0},end:{x:5,y:0,z:0},c1:{x:-2,y:0,z:0},c2:{x:2,y:0,z:0}},curve2:{calced:!1,start:{x:-5,y:0,z:0},end:{x:5,y:0,z:0},c1:{x:-2,y:0,z:0},c2:{x:2,y:0,z:0}},model:{position:{x:0,y:0,z:0},rotation:{x:0,y:0,z:0}},plane1:{rotation:0,width:15,height:10},plane2:{rotation:0,width:15,height:10},rays:{thrown:!1},other:{hidePlanes:!1,hideTextHelper:!0,selectingPoint:!1,normalRotation:0},designTransformation:{},sphereIntersection:{}},J=await async function(){const n=new X,o=new Z;return o.setDecoderPath("vendor/draco/gltf/"),n.setDRACOLoader(o),await new Promise(r=>{n.load("./vendor/helper.gltf",function(s){r(s.scene.children[0].geometry)})})}(),E=new C(J,x);p();const I=new dat.GUI,M=I.addFolder("Props");M.open(),M.add(e.other,"hidePlanes").onChange(p),M.add(e.other,"hideTextHelper").onChange(p);const W=I.addFolder("Plane 1");W.open(),W.add(e.plane1,"width",0,20,.01).onChange(p),W.add(e.plane1,"rotation",-2*Math.PI,2*Math.PI,.01).onChange(p);const F=I.addFolder("Plane 2 Dimensions");F.open(),F.add(e.plane2,"width",0,20,.01).onChange(p),F.add(e.plane2,"rotation",-2*Math.PI,2*Math.PI,.01).onChange(p);function p(){if(k&&t.remove(k),D&&t.remove(D),b&&t.remove(b),T&&t.remove(T),E&&t.remove(E),G.length)for(const n of G)t.remove(n);if(e.other.hidePlanes===!1&&e.rays.thrown===!1){b=new C(new j(e.plane1.width,e.plane1.height,.01,3,3,3),x),b.rotation.x=e.plane1.rotation,t.add(b),T=new C(new j(.01,e.plane2.height,e.plane2.width,3,3,3),x),T.rotation.x=e.plane2.rotation,t.add(T);const n=10,o=e.plane1.width/(n-1);for(let i=0;i<n;i++){const m=new d(0,-1,0),l=-e.plane1.width/2+i*o,u=e.plane1.height/2+1,y=new d(l,u,0);y.applyEuler(b.rotation),m.applyEuler(b.rotation);const v=new N(m,new d(0,0,0),1,65280);v.position.copy(b.position).add(y),G.push(v),t.add(v)}const r=10,s=e.plane2.width/(r-1);for(let i=0;i<r;i++){const m=new d(0,-1,0),l=-e.plane2.width/2+i*s,u=e.plane2.height/2+1,y=new d(0,u,l);y.applyEuler(T.rotation),m.applyEuler(T.rotation);const v=new N(m,new d(0,0,0),1,16711680);v.position.copy(T.position).add(y),G.push(v),t.add(v)}}if(e.designTransformation.quaternion){g.position.set(0,0,0),g.rotation.set(0,0,0);const n=e.designTransformation.quaternion.clone(),o=e.designTransformation.point.clone();g.setRotationFromQuaternion(n);const r=o.applyQuaternion(n);g.position.set(-r.x,-r.y,-r.z)}if(e.sphereIntersection.point){L&&t.remove(L),A&&t.remove(A);const n=new me(.1,32,16),o=new ye({color:"#ff0000"});L=new C(n,o);const r=e.sphereIntersection.point.clone(),s=e.sphereIntersection.normal.clone();L.position.set(r.x,r.y,0),A=new N(s,r,1,16776960),e.designTransformation.quaternion&&(L.position.set(0,0,0),A=new N(s.clone().applyQuaternion(e.designTransformation.quaternion),new d(0,0,0),1,16776960)),t.add(L),t.add(A)}if(e.curve1.calced){const n=new R(e.curve1.start,e.curve1.c1,e.curve1.c2,e.curve1.end);k=$(n),t.add(k)}if(e.curve2.calced){const n=new R(e.curve2.start,e.curve2.c1,e.curve2.c2,e.curve2.end);D=$(n),t.add(D)}e.curve1.calced&&e.curve2.calced&&re(),e.other.hideTextHelper===!1&&t.add(E),V()}function oe(){let n;e.sphereIntersection.normalOriginal?n=e.sphereIntersection.normalOriginal.clone():(e.sphereIntersection.normalOriginal=e.sphereIntersection.normal.clone(),n=e.sphereIntersection.normal.clone());const o=new ve;o.makeRotationZ(e.other.normalRotation),n.applyMatrix4(o),e.sphereIntersection.normal=n.clone(),p()}function re(){_({THREE:U,curve:new R(e.curve2.start,e.curve2.c1,e.curve2.c2,e.curve2.end),orientation:new d(1,0,0),bufferGeometry:E.geometry,axis:"z",preserveDimensions:!1,scene:t}),_({THREE:U,curve:new R(e.curve1.start,e.curve1.c1,e.curve1.c2,e.curve1.end),orientation:new d(0,0,1),bufferGeometry:E.geometry,axis:"x",preserveDimensions:!1,scene:t})}function ie(){const o=[],r=[],i=e.plane1.width/9,m=e.plane2.width/(10-1);for(let y=0;y<10;y++){const v=new d(0,-1,0),B=-e.plane1.width/2+y*i,q=e.plane1.height/2+1,Q=new d(B,q,0),P=new Y;P.firstHitOnly=!0,P.set(Q,v);const O=P.intersectObject(g,!0);o.push([O[0].point.x,O[0].point.y])}const l=K(o,10);e.curve1.start.x=l[0][0][0],e.curve1.start.y=l[0][0][1],e.curve1.start.z=0,e.curve1.c1.x=l[0][1][0],e.curve1.c1.y=l[0][1][1],e.curve1.c1.z=0,e.curve1.c2.x=l[0][2][0],e.curve1.c2.y=l[0][2][1],e.curve1.c2.z=0,e.curve1.end.x=l[0][3][0],e.curve1.end.y=l[0][3][1],e.curve1.end.z=0,e.curve1.calced=!0;for(let y=0;y<10;y++){const v=new d(0,-1,0),B=e.plane2.height/2+1,q=-e.plane2.width/2+y*m,Q=new d(0,B,q),P=new Y;P.firstHitOnly=!0,P.set(Q,v);const O=P.intersectObject(g,!0);r.push([O[0].point.y,O[0].point.z])}const u=K(r,10);e.curve2.start.x=0,e.curve2.start.y=u[0][0][0],e.curve2.start.z=u[0][0][1],e.curve2.c1.x=0,e.curve2.c1.y=u[0][1][0],e.curve2.c1.z=u[0][1][1],e.curve2.c2.x=0,e.curve2.c2.y=u[0][2][0],e.curve2.c2.z=u[0][2][1],e.curve2.end.x=0,e.curve2.end.y=u[0][3][0],e.curve2.end.z=u[0][3][1],e.curve2.calced=!0,e.rays.thrown=!0,p()}function ae(){const n=e.sphereIntersection.normal.clone(),o=new d(0,1,0),r=new d().crossVectors(n,o).normalize(),s=Math.acos(n.dot(o)),i=new ge().setFromAxisAngle(r,s);e.designTransformation.quaternion=i.clone(),e.designTransformation.point=e.sphereIntersection.point.clone(),e.designTransformation.dataJSON={position:e.designTransformation.point.clone(),normal:e.sphereIntersection.normal.clone()}}const h=document.createElement("button");h.style.position="absolute",h.style.top="10px",h.style.left="10px",h.style.border=0,h.style.background="blueviolet",h.style.color="white",h.style.padding="7px 14px",h.style.cursor="pointer",h.innerHTML="UPLOAD GTLF",h.addEventListener("click",async()=>{document.getElementById("fileInput").click()}),document.body.append(h),document.getElementById("fileInput").addEventListener("change",async function(n){const o=n.target.files[0];o&&(g&&t.remove(g),ee=await H(o),g=new C(ee,x),g.material.side=he,t.add(g),h.style.background="green"),p()});const a=document.createElement("button");a.style.position="absolute",a.style.top="50px",a.style.left="10px",a.style.border=0,a.style.background="blueviolet",a.style.color="white",a.style.padding="7px 14px",a.style.cursor="pointer",a.innerHTML="SELECT POINT",a.addEventListener("click",n=>{e.other.selectingPoint===!0?(e.other.selectingPoint=!1,a.style.background="blueviolet",a.innerHTML="SELECT POINT",n.stopImmediatePropagation()):(a.style.background="orange",e.other.selectingPoint=!0,a.innerHTML="CLICK ON THE JEWEL",n.stopImmediatePropagation(),document.body.onclick=null,document.body.onclick=o=>{const r=new we,s=new Y;s.firstHitOnly=!0,r.x=o.clientX/window.innerWidth*2-1,r.y=-(o.clientY/window.innerHeight)*2+1,s.setFromCamera(r,S);const i=s.intersectObjects(t.children.filter(m=>m.type==="Mesh"&&m.geometry.type!=="BoxGeometry"),!0);i.length>0&&i[0].face?(e.sphereIntersection={point:i[0].point.clone(),normal:i[0].face.normal.clone()},M.add(e.other,"normalRotation",-Math.PI,Math.PI,.1).onChange(oe),p(),document.body.onclick=null,a.style.background="green",a.innerHTML="DESIGN CENTER SELECTED",e.other.selectingPoint=!1):a.innerHTML="TARGET THE STL"})}),document.body.append(a);const f=document.createElement("button");f.style.position="absolute",f.style.top="90px",f.style.left="10px",f.style.border=0,f.style.background="blueviolet",f.style.color="white",f.style.padding="7px 14px",f.style.cursor="pointer",f.innerHTML="MOVE JEWEL",f.addEventListener("click",()=>{ae(),p(),f.innerHTML="JEWEL ALIGNED WITH DESIGN",f.style.background="green"}),document.body.append(f);const c=document.createElement("button");c.style.position="absolute",c.style.top="130px",c.style.left="10px",c.style.border=0,c.style.background="blueviolet",c.style.color="white",c.style.padding="7px 14px",c.style.cursor="pointer",c.innerHTML="THROW RAYCASTERS",c.addEventListener("click",()=>{e.curve1.calced===!1&&e.curve2.calced===!1?(ie(),c.innerHTML="RESET",c.style.background="green"):(e.curve1.calced=!1,e.curve2.calced=!1,p(),c.innerHTML="THROW CASTERS",c.style.background="blueviolet")}),document.body.append(c);const w=document.createElement("button");w.style.position="absolute",w.style.top="170px",w.style.left="10px",w.style.border=0,w.style.background="blueviolet",w.style.color="white",w.style.padding="7px 14px",w.style.cursor="pointer",w.innerHTML="PRINT BEND DATA",w.addEventListener("click",()=>{const n=JSON.stringify([{flexy:!0,axis:"z",transformation:{position:{x:e.designTransformation.dataJSON.position.x,y:e.designTransformation.dataJSON.position.y,z:e.designTransformation.dataJSON.position.z},normal:{x:e.designTransformation.dataJSON.normal.x,y:e.designTransformation.dataJSON.normal.y,z:e.designTransformation.dataJSON.normal.z}},curveParts:[{startPoint:{x:e.curve2.start.x,y:e.curve2.start.y,z:e.curve2.start.z},controlPoint1:{x:e.curve2.c1.x,y:e.curve2.c1.y,z:e.curve2.c1.z},controlPoint2:{x:e.curve2.c2.x,y:e.curve2.c2.y,z:e.curve2.c2.z},endPoint:{x:e.curve2.end.x,y:e.curve2.end.y,z:e.curve2.end.z}}]},{flexy:!0,axis:"x",transformation:{position:{x:e.designTransformation.dataJSON.position.x,y:e.designTransformation.dataJSON.position.y,z:e.designTransformation.dataJSON.position.z},normal:{x:e.designTransformation.dataJSON.normal.x,y:e.designTransformation.dataJSON.normal.y,z:e.designTransformation.dataJSON.normal.z}},curveParts:[{startPoint:{x:e.curve1.start.x,y:e.curve1.start.y,z:e.curve1.start.z},controlPoint1:{x:e.curve1.c1.x,y:e.curve1.c1.y,z:e.curve1.c1.z},controlPoint2:{x:e.curve1.c2.x,y:e.curve1.c2.y,z:e.curve1.c2.z},endPoint:{x:e.curve1.end.x,y:e.curve1.end.y,z:e.curve1.end.z}}]}]);console.log(n),navigator.clipboard.writeText(n),w.innerHTML="COPIED!"}),document.body.append(w)})();
