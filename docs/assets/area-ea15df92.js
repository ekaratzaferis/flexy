import{S as le,P as de,W as ue,A as pe,D as ye,a as fe,O as he,M as oe,c as H,B as U,V as u,v as S,m as me,b as we,p as ve,u as ge,R as j,h as xe,Q as be,e as G,T as Z,C as Ee,d as Te}from"./OrbitControls-50fa714a.js";import{b as K}from"./flexy-f2d9260a.js";import{G as _,D as $,f as ee}from"./fit-curve-894d436d.js";const n=new le,C=new de(75,window.innerWidth/window.innerHeight,.1,1e3);C.position.set(10,5,10);const L=new ue({antialias:!0,alpha:!0});L.setSize(window.innerWidth,window.innerHeight);document.body.appendChild(L.domElement);const Le=new pe(4210752);n.add(Le);const re=new ye(16777215,.5);re.position.set(1,1,1);n.add(re);const Pe=new fe(5);n.add(Pe);const ze=new he(C,L.domElement);function X(){L.render(n,C)}ze.addEventListener("change",function(){X()});window.addEventListener("resize",function(){const b=window.innerWidth,I=window.innerHeight;L.setSize(b,I),C.aspect=b/I,C.updateProjectionMatrix()});L.setClearColor(74565);L.setPixelRatio(window.devicePixelRatio);L.setSize(window.innerWidth,window.innerHeight);function te(b){const e=b.getPoints(1e3),N=new Ee(e),P=new Te(N,1e3,.05,8,!1),A=new oe({wireframe:!0});return new H(P,A)}X();let D,W,a,ne,J,E,T,M,O;const F=[];(async function(){const b=new oe({wireframe:!1}),I=function(t){return new Promise((o,r)=>{const c=new FileReader;c.onload=function(s){const m=new _,d=new $;d.setDecoderPath("vendor/draco/gltf/"),m.setDRACOLoader(d),m.parse(c.result,"",f=>o(f.scene.children[2].geometry))},c.onerror=function(s){r(s)},c.readAsArrayBuffer(t)})},e={curve1:{calced:!1,start:{x:-5,y:0,z:0},end:{x:5,y:0,z:0},c1:{x:-2,y:0,z:0},c2:{x:2,y:0,z:0}},curve2:{calced:!1,start:{x:-5,y:0,z:0},end:{x:5,y:0,z:0},c1:{x:-2,y:0,z:0},c2:{x:2,y:0,z:0}},model:{position:{x:0,y:0,z:0},rotation:{x:0,y:0,z:0}},plane1:{rotation:0,width:15,height:10},plane2:{rotation:0,width:15,height:10},rays:{thrown:!1},other:{hidePlanes:!1,hideTextHelper:!0,selectingPoint:!1,area:"left",normalRotation:0},designTransformation:{},sphereIntersection:{}},N=await async function(){const t=new _,o=new $;return o.setDecoderPath("vendor/draco/gltf/"),t.setDRACOLoader(o),await new Promise(r=>{t.load("./helper.gltf",function(c){r(c.scene.children[0].geometry)})})}(),P=new H(N,b);p();const A=new dat.GUI,R=A.addFolder("Props");R.open(),R.add(e.other,"hidePlanes").onChange(p),R.add(e.other,"hideTextHelper").onChange(p);const B=A.addFolder("Plane 1");B.open(),B.add(e.plane1,"width",0,20,.01).onChange(p),B.add(e.plane1,"rotation",-2*Math.PI,2*Math.PI,.01).onChange(p);const Y=A.addFolder("Plane 2 Dimensions");Y.open(),Y.add(e.plane2,"width",0,20,.01).onChange(p),Y.add(e.plane2,"rotation",-2*Math.PI,2*Math.PI,.01).onChange(p);function p(){if(D&&n.remove(D),W&&n.remove(W),E&&n.remove(E),T&&n.remove(T),P&&n.remove(P),F.length)for(const t of F)n.remove(t);if(e.other.hidePlanes===!1&&e.rays.thrown===!1){E=new H(new U(e.plane1.width,e.plane1.height,.01,3,3,3),b),E.rotation.x=e.plane1.rotation,n.add(E),T=new H(new U(.01,e.plane2.height,e.plane2.width,3,3,3),b),T.rotation.x=e.plane2.rotation,n.add(T);const t=10,o=e.plane1.width/(t-1);for(let s=0;s<t;s++){const m=new u(0,-1,0),d=-e.plane1.width/2+s*o,f=e.plane1.height/2+1,w=new u(d,f,0);w.applyEuler(E.rotation),m.applyEuler(E.rotation);const x=new S(m,new u(0,0,0),1,65280);x.position.copy(E.position).add(w),F.push(x),n.add(x)}const r=10,c=e.plane2.width/(r-1);for(let s=0;s<r;s++){const m=new u(0,-1,0),d=-e.plane2.width/2+s*c,f=e.plane2.height/2+1,w=new u(0,f,d);w.applyEuler(T.rotation),m.applyEuler(T.rotation);const x=new S(m,new u(0,0,0),1,16711680);x.position.copy(T.position).add(w),F.push(x),n.add(x)}}if(e.designTransformation.quaternion){a.position.set(0,0,0),a.rotation.set(0,0,0);const t=e.designTransformation.quaternion.clone(),o=e.designTransformation.point.clone();a.setRotationFromQuaternion(t);const r=o.applyQuaternion(t);a.position.set(-r.x,-r.y,-r.z)}if(e.sphereIntersection.point){M&&n.remove(M),O&&n.remove(O);const t=new me(.1,32,16),o=new we({color:"#ff0000"});M=new H(t,o);const r=e.sphereIntersection.point.clone(),c=e.sphereIntersection.normal.clone();M.position.set(0,r.y,r.z),O=new S(c,r,1,16776960),e.designTransformation.quaternion&&(M.position.set(0,0,0),O=new S(c.clone().applyQuaternion(e.designTransformation.quaternion),new u(0,0,0),1,16776960)),n.add(M),n.add(O)}if(e.curve1.calced){const t=new G(e.curve1.start,e.curve1.c1,e.curve1.c2,e.curve1.end);D=te(t),n.add(D)}if(e.curve2.calced){const t=new G(e.curve2.start,e.curve2.c1,e.curve2.c2,e.curve2.end);W=te(t),n.add(W)}e.curve1.calced&&e.curve2.calced&&ie(),e.other.hideTextHelper===!1&&n.add(P),X()}function se(){let t;e.sphereIntersection.normalOriginal?t=e.sphereIntersection.normalOriginal.clone():(e.sphereIntersection.normalOriginal=e.sphereIntersection.normal.clone(),t=e.sphereIntersection.normal.clone());const o=new xe;o.makeRotationX(e.other.normalRotation),t.applyMatrix4(o),e.sphereIntersection.normal=t.clone(),p()}function ie(){K({THREE:Z,curve:new G(e.curve2.start,e.curve2.c1,e.curve2.c2,e.curve2.end),orientation:new u(1,0,0),bufferGeometry:P.geometry,axis:"z",preserveDimensions:!1,scene:n}),K({THREE:Z,curve:new G(e.curve1.start,e.curve1.c1,e.curve1.c2,e.curve1.end),orientation:new u(0,0,1),bufferGeometry:P.geometry,axis:"x",preserveDimensions:!1,scene:n})}function ce(){const o=[],r=[],s=e.plane1.width/9,m=e.plane2.width/(10-1);for(let w=0;w<10;w++){const x=new u(0,-1,0),q=-e.plane1.width/2+w*s,Q=e.plane1.height/2+1,V=new u(q,Q,0),z=new j;z.firstHitOnly=!0,z.set(V,x);const k=z.intersectObject(a,!0);o.push([k[0].point.x,k[0].point.y])}const d=ee(o,10);e.curve1.start.x=d[0][0][0],e.curve1.start.y=d[0][0][1],e.curve1.start.z=0,e.curve1.c1.x=d[0][1][0],e.curve1.c1.y=d[0][1][1],e.curve1.c1.z=0,e.curve1.c2.x=d[0][2][0],e.curve1.c2.y=d[0][2][1],e.curve1.c2.z=0,e.curve1.end.x=d[0][3][0],e.curve1.end.y=d[0][3][1],e.curve1.end.z=0,e.curve1.calced=!0;for(let w=0;w<10;w++){const x=new u(0,-1,0),q=e.plane2.height/2+1,Q=-e.plane2.width/2+w*m,V=new u(0,q,Q),z=new j;z.firstHitOnly=!0,z.set(V,x);const k=z.intersectObject(a,!0);r.push([k[0].point.y,k[0].point.z])}const f=ee(r,10);e.curve2.start.x=0,e.curve2.start.y=f[0][0][0],e.curve2.start.z=f[0][0][1],e.curve2.c1.x=0,e.curve2.c1.y=f[0][1][0],e.curve2.c1.z=f[0][1][1],e.curve2.c2.x=0,e.curve2.c2.y=f[0][2][0],e.curve2.c2.z=f[0][2][1],e.curve2.end.x=0,e.curve2.end.y=f[0][3][0],e.curve2.end.z=f[0][3][1],e.curve2.calced=!0,e.rays.thrown=!0,p()}function ae(){const t=e.sphereIntersection.normal.clone(),o=new u(0,1,0),r=new u().crossVectors(t,o).normalize(),c=Math.acos(t.dot(o)),s=new be().setFromAxisAngle(r,c);e.designTransformation.quaternion=s.clone(),e.designTransformation.point=e.sphereIntersection.point.clone()}const v=document.createElement("button");v.style.position="absolute",v.style.top="10px",v.style.left="10px",v.style.border=0,v.style.background="blueviolet",v.style.color="white",v.style.padding="7px 14px",v.style.cursor="pointer",v.innerHTML="UPLOAD GTLF",v.addEventListener("click",async()=>{document.getElementById("fileInput").click()}),document.body.append(v),document.getElementById("fileInput").addEventListener("change",async function(t){const o=t.target.files[0];o&&(a&&n.remove(a),J=await I(o),ne=J.clone(),a=new H(J,b),a.material.side=ve,n.add(a),v.style.background="green"),p()});const y=document.createElement("button");y.style.position="absolute",y.style.top="50px",y.style.left="10px",y.style.border=0,y.style.background="blueviolet",y.style.color="white",y.style.padding="7px 14px",y.style.cursor="pointer",y.innerHTML="TOGGLE LEFT OR RIGHT AREA",y.addEventListener("click",t=>{a&&(n.remove(a),y.style.background="green",a=new H(ne.clone(),b),n.add(a),e.other.area==="left"?(y.innerHTML="RIGHT AREA",a.geometry.rotateY(-Math.PI/2),e.other.area="right"):(y.innerHTML="LEFT AREA",a.geometry.rotateY(Math.PI/2),e.other.area="left"),p())}),document.body.append(y);const i=document.createElement("button");i.style.position="absolute",i.style.top="90px",i.style.left="10px",i.style.border=0,i.style.background="blueviolet",i.style.color="white",i.style.padding="7px 14px",i.style.cursor="pointer",i.innerHTML="SELECT POINT",i.addEventListener("click",t=>{e.other.selectingPoint===!0?(e.other.selectingPoint=!1,i.style.background="blueviolet",i.innerHTML="SELECT POINT",t.stopImmediatePropagation()):(i.style.background="orange",e.other.selectingPoint=!0,i.innerHTML="CLICK ON THE JEWEL",t.stopImmediatePropagation(),document.body.onclick=null,document.body.onclick=o=>{const r=new ge,c=new j;c.firstHitOnly=!0,r.x=o.clientX/window.innerWidth*2-1,r.y=-(o.clientY/window.innerHeight)*2+1,c.setFromCamera(r,C);const s=c.intersectObjects(n.children.filter(m=>m.type==="Mesh"&&m.geometry.type!=="BoxGeometry"),!0);s.length>0&&s[0].face?(e.sphereIntersection={point:s[0].point.clone(),normal:s[0].face.normal.clone()},R.add(e.other,"normalRotation",-Math.PI,Math.PI,.1).onChange(se),p(),document.body.onclick=null,i.style.background="green",i.innerHTML="DESIGN CENTER SELECTED",e.other.selectingPoint=!1):i.innerHTML="TARGET THE STL"})}),document.body.append(i);const h=document.createElement("button");h.style.position="absolute",h.style.top="130px",h.style.left="10px",h.style.border=0,h.style.background="blueviolet",h.style.color="white",h.style.padding="7px 14px",h.style.cursor="pointer",h.innerHTML="MOVE JEWEL",h.addEventListener("click",()=>{ae(),p(),h.innerHTML="JEWEL ALIGNED WITH DESIGN",h.style.background="green"}),document.body.append(h);const l=document.createElement("button");l.style.position="absolute",l.style.top="170px",l.style.left="10px",l.style.border=0,l.style.background="blueviolet",l.style.color="white",l.style.padding="7px 14px",l.style.cursor="pointer",l.innerHTML="THROW RAYCASTERS",l.addEventListener("click",()=>{e.curve1.calced===!1&&e.curve2.calced===!1?(ce(),l.innerHTML="RESET",l.style.background="green"):(e.curve1.calced=!1,e.curve2.calced=!1,p(),l.innerHTML="THROW CASTERS",l.style.background="blueviolet")}),document.body.append(l);const g=document.createElement("button");g.style.position="absolute",g.style.top="210px",g.style.left="10px",g.style.border=0,g.style.background="blueviolet",g.style.color="white",g.style.padding="7px 14px",g.style.cursor="pointer",g.innerHTML="PRINT BEND DATA",g.addEventListener("click",()=>{console.log(JSON.stringify([{flexy:!0,axis:"z",curveParts:[{startPoint:{x:e.curve2.start.x,y:e.curve2.start.y,z:e.curve2.start.z},controlPoint1:{x:e.curve2.c1.x,y:e.curve2.c1.y,z:e.curve2.c1.z},controlPoint2:{x:e.curve2.c2.x,y:e.curve2.c2.y,z:e.curve2.c2.z},endPoint:{x:e.curve2.end.x,y:e.curve2.end.y,z:e.curve2.end.z}}]},{flexy:!0,axis:"x",curveParts:[{startPoint:{x:e.curve1.start.x,y:e.curve1.start.y,z:e.curve1.start.z},controlPoint1:{x:e.curve1.c1.x,y:e.curve1.c1.y,z:e.curve1.c1.z},controlPoint2:{x:e.curve1.c2.x,y:e.curve1.c2.y,z:e.curve1.c2.z},endPoint:{x:e.curve1.end.x,y:e.curve1.end.y,z:e.curve1.end.z}}]}]))}),document.body.append(g)})();
